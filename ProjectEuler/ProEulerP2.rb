# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

sum = 0
collection = []
n1 = 1
n2 = 2
fibonacci_numbers= []
fibonacci_numbers.push(n1, n2)
n3 = n1 + n2


while (n3 < 4_000_000) do
  fibonacci_numbers.push(n3)
  n1 = n2
  n2 = n3
  n3 = n1 + n2
end

fibonacci_numbers.each do |i|
  if (i % 2 == 0)
  sum += i
  collection.push(i)
  end
end

puts "#{collection}"

puts "#{sum}"


=begin
def fib (n)

  a = 1
  b = 2

  n.times do
    temp = a
    a = b
    b = temp + b
  end

  return a
end

fib_num = []

10.times do |n|
  results = fib(n)
  fib_num  << results
end

=end


=begin n = 10

def fibonacci(n)
  fibonacci(n-1) + fibonacci(n-2)
end



def sum
    if fibonacci(10) % 2 == 0
      puts fibonacci
    end
end


puts "#{n}"

puts fibonacci(n)

=end